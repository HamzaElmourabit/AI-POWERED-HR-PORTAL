version: '3.8'

services:
  # Backend Flask
  backend:
    build:
      context: ./portail-rh-backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/portail_rh
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
    depends_on:
      - db
    volumes:
      - ./portail-rh-backend:/app
    networks:
      - portail-rh-network

  # Frontend React (build et serveur nginx)
  frontend:
    build:
      context: ./portail-rh-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - portail-rh-network

  # Base de donn√©es PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=portail_rh
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - portail-rh-network

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portail-rh-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - portail-rh-network

volumes:
  postgres_data:
  redis_data:

networks:
  portail-rh-network:
    driver: bridge

